[general]
name = string(default='train')
seed = integer(default=42)
# which framework to use - should be in adequation with the model
framework = option('pytorch', 'sklearn', default='sklearn')
# for which task: regression or forecasting
task = option('regression', 'forecasting', default='regression')

[data]
tickers_file_name = string(default='tech_us')
start_date = date(default='2020-01-01')
end_date = date(default='now')
return_type = option('raw', 'returns', default='raw')

[preprocessor]
# how should we scale - best is to scale wiht min-max. By default scale to [-1, 1]
scale = option('min-max', 'norm', 'None', default='min-max')
# which features should we select, for now only works with one
features = string_list(default=list('Close',))

[dataloader]        
# valid-train ratio
ratio = float(default=0.8)
# should be the same as the task
dataloader_type=option('forecasting', 'regression', default='regression')
    # specific parameters
    [[forecasting]]
    # window to use to predict next stock value (sliding window process)
    window = integer(default=50)
    [[regression]]
    # what is the index of the reference ticker in tickers_file_name
    # it is used to derived others from it
    index = integer(default=0)

[training]
    [[pytorch]]
    epochs = integer(default=10)
    learning_rate = float(default=0.001)
    batch_size = integer(default=32)
    device = option('cuda', 'cpu', default='cpu')
    dtype = option('double', 'float', default='float')
    [[sklearn]]

[model]
# which model to use - for now only two are defined
# it is followed by specific parameters
# GRU: pytorch framework
# MultipleLinearRegression : sklearn framework
model_type = option('GRU', 'MultipleLinearRegression', default='MultipleLinearRegression')
    [[GRU]]
    num_layers = integer(default=3)
    input_size = integer(default=2)
    hidden_size = integer(default=2)
    [[MultipleLinearRegression]]
    number_of_submodels = integer(default=8)